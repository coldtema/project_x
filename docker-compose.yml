version: '3.12.6'

services:
  web:
    build: .
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             python manage.py loaddata initial.json &&
             gunicorn project_x.wsgi:application --bind 0.0.0.0:8000 --workers 3"
    volumes:
      - static:/code/staticfiles
    env_file:
      - .env
    networks:
      - app_network
    depends_on:
      - db
      - redis

  db:
    image: postgres:16
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - .env
    networks:
      - app_network

  redis:
    image: redis:7-alpine
    networks:
      - app_network

  celery:
    build: .
    command: celery -A project_x worker --concurrency=2 --max-tasks-per-child=5 --loglevel=info
    volumes:
      - .:/code
    env_file:
      - .env
    networks:
      - app_network
    depends_on:
      - redis
      - db

  celery-beat:
    build: .
    command: celery -A project_x beat --loglevel=info --schedule=/tmp/celerybeat-schedule
    user: "1000:1000"
    volumes:
      - .:/code
    env_file:
    - .env
    networks:
      - app_network
    depends_on:
      - redis
      - db

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - /etc/letsencrypt/:/etc/letsencrypt/
      - static:/code/staticfiles
    networks:
      - app_network
    depends_on:
      - web

volumes:
  static:
  postgres_data:

networks:
  app_network:
    driver: bridge